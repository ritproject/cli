image: arkye/docker-compose
services:
  - docker:dind
stages:
  - test
  - push project images
  - push production images

# Stage: test

.test: &test
  stage: test
  tags:
    - docker

test:
  <<: *test
  variables:
    DOCKERFILE: recursive/Dockerfile
  script: docker-compose -f docker-compose.test.yml run cli

static analysis:
  script:
    - docker-compose -f docker-compose.test.yml pull --quiet cli.static
    - docker-compose -f docker-compose.test.yml run cli.static

# Stage: push project images

.push_project_image: &push_project_image
  stage: push project images
  before_script:
    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
  only:
    - /^master$/
  tags:
    - docker

push development image:
  <<: *push_project_image
  script:
    - docker-compose build
    - docker-compose push

push test image:
  <<: *push_project_image
  script:
    - docker-compose -f docker-compose.test.yml build cli
    - docker-compose -f docker-compose.test.yml push cli

push alpine release image:
  <<: *push_project_image
  script:
    - docker-compose -f docker-compose.production.yml build alpine_release
    - docker-compose -f docker-compose.production.yml push alpine_release

# Stage: push production images

.push_production_image: &push_production_image
  stage: push production images
  script:
    - docker-compose -f docker-compose.production.yml build
    - docker-compose -f docker-compose.production.yml push cli
  tags:
    - docker

push staging image:
  <<: *push_production_image
  variables:
    DOCKERFILE: recursive/Dockerfile
    IMAGE_TAG: staging
  environment:
    name: staging
  only:
    - /^staging$/

push production image:
  <<: *push_production_image
  variables:
    DOCKERFILE: recursive/Dockerfile
  environment:
    name: production
  only:
    - /^master$/

push tagged image:
  <<: *push_production_image
  variables:
    DOCKERFILE: recursive/Dockerfile
    IMAGE_TAG: $CI_COMMIT_TAG
  environment:
    name: $CI_COMMIT_TAG
  only:
    - tags
